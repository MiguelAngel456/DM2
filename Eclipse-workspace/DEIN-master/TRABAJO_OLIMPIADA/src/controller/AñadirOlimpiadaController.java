package controller;

import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.RadioButton;
import javafx.scene.control.TextField;
import javafx.scene.control.ToggleGroup;
import javafx.stage.Stage;
import javafx.stage.Window;
import model.Deporte;
import model.Olimpiada;

import java.net.URL;
import java.sql.SQLException;
import java.util.ResourceBundle;

import dao.OlimpiadaDao;
import javafx.event.ActionEvent;

public class A単adirOlimpiadaController implements Initializable{
	@FXML
    private Button btnAceptar;

    @FXML
    private Button btnCancelar;

    @FXML
    private Label lblTitulo;

    @FXML
    private RadioButton rbSummer;

    @FXML
    private RadioButton rbWinter;

    @FXML
    private TextField txtAnio;

    @FXML
    private TextField txtCiudad;

    @FXML
    private TextField txtNombre;
    @FXML
    private ToggleGroup gptemp;
    
	private OlimpiadaDao od;
	private int idAnt;
	// Event Listener on Button[#btnAceptar].onAction
	@FXML
	public void aceptar(ActionEvent event) {
		// TODO Autogenerated
		
		
		
		
		if(lblTitulo.getText().equals("Modificar Olimpiada")) {
			if(comprobar().length()==0) {
				String nombre=txtNombre.getText();
				int anio=Integer.parseInt(txtAnio.getText());
				String temp;
				if(rbWinter.isSelected()) {
					temp="Winter";
				}else {
					temp="Summer";
				}
				String ciudad=txtCiudad.getText();
				Olimpiada ol=new Olimpiada(idAnt,nombre, anio, temp, ciudad);
				System.out.println(ol.getId());
				try {
					od.modificarOlimpiada(ol);
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					error("Error en el sql");
				}
				info();
				Stage stage = (Stage) btnAceptar.getScene().getWindow();
				stage.close();
			}else {
				error();
			}
			

		}else {
			if(comprobar().length()==0) {
				String nombre=txtNombre.getText();
				int anio=Integer.parseInt(txtAnio.getText());
				String temp;
				if(rbWinter.isSelected()) {
					temp="Winter";
				}else {
					temp="Summer";
				}
				String ciudad=txtCiudad.getText();
				try {
					int id=(od.ultimoId()+1);
					Olimpiada ol=new Olimpiada(id,nombre, anio, temp, ciudad);
					System.out.println(ol.getTemporada());
					if(this.comprobar().length()==0) {
						od.anadirOlimpiada(ol);
						info();
						Stage stage = (Stage) btnAceptar.getScene().getWindow();
						stage.close();
					}
				}catch (SQLException e) {
					error("Error en el sql");
				}
				
				
			}else {
				error();
			}
				
			
		}
		
		
	}
	// Event Listener on Button[#btnCancelar].onAction
	@FXML
	public void cancelar(ActionEvent event) {
		// TODO Autogenerated
		Stage stage = (Stage) btnAceptar.getScene().getWindow();
		stage.close();
	}

	public String comprobar() {
		String fallo="";
		if(txtNombre.getText().length()==0) {
			fallo+="\n El campo del nombre de la Olimpiada tiene que tener contenido";
		}
		if(txtNombre.getText().length()>11) {
			fallo+="\n El campo del nombre no puede tene mas de 11 caracteres";
		}
		
		if(txtCiudad.getText().length()==0) {
			fallo+="\n El campo del Ciudad de la Olimpiada tiene que tener contenido";
		}
		if(txtCiudad.getText().length()>50) {
			fallo+="\n El campo del Ciudad no puede tene mas de 50 caracteres";
		}
		
		if(txtAnio.getText().length()==0) {
			fallo+="\n El campo del a単o de la Olimpiada tiene que tener contenido";
		}
		if(txtAnio.getText().length()>5) {
			fallo+="\n El campo del a単o de la Olimpiada no puede tene mas de 5 caracteres";
		}
		int anio=0;
		try {
			int i=Integer.parseInt(txtAnio.getText());
			anio=Integer.parseInt(txtAnio.getText());
		} catch (NumberFormatException e) {
			// TODO: handle exception
			fallo+="\n El campo del a単o de la Olimpiada tiene que ser numeros";
		}

		String nombre=txtNombre.getText();
		String temp;
		if(rbWinter.isSelected()) {
			temp=rbWinter.getText();
		}else {
			temp=rbSummer.getText();
		}
		String ciudad=txtCiudad.getText();
		if(!lblTitulo.getText().equals("Modificar Olimpiada")) {
			try {
				int id=od.ultimoId();
				
				Olimpiada ol=new Olimpiada(id,nombre, anio, temp, ciudad);
				if(od.sacarOlimpiada().contains(ol)) {
					fallo+="\n Esa Olimpiada ya existe";
				}
			}catch (SQLException e) {
				// TODO: handle exception
				error("Error en el sql");
			}
		}
		
		
		
		
		return fallo;
	}
	public void error () {
		Alert alert;
		String texto=comprobar();
		alert = new Alert(Alert.AlertType.ERROR);
		alert.setContentText(texto);
		alert.setHeaderText(null);
		alert.setTitle("ERROR");
		alert.showAndWait();
	}
	public void error (String text) {
		Alert alert;
		String texto=text;
		alert = new Alert(Alert.AlertType.ERROR);
		alert.setContentText(texto);
		alert.setHeaderText(null);
		alert.setTitle("ERROR");
		alert.showAndWait();
	}
	public void info() {
		Alert alert;
		alert = new Alert(Alert.AlertType.INFORMATION);
		alert.setContentText("ACCION HECHA CORRECTAMENTE");
		alert.setHeaderText(null);
		alert.setTitle("INFO");
		alert.showAndWait();
	}
	public void rellenar(Olimpiada ol) {
		this.lblTitulo.setText("Modificar Olimpiada");
		//rellenar los campos
		txtNombre.setText(ol.getNombre());
		txtAnio.setText(String.valueOf(ol.getAnio()));
		if(ol.getTemporada().toLowerCase().equals("Winter")) {
			rbWinter.setSelected(true);
		}else {
			if(ol.getTemporada().equals("Summer")) {
				rbSummer.setSelected(true);
			}
		}
		txtCiudad.setText(ol.getCiudad());
		txtNombre.setDisable(true);
		//
		idAnt=ol.getId();
	}
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		od=new OlimpiadaDao();
		this.rbWinter.setSelected(true);

		
	}
}
