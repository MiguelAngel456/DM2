package controller;

import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.stage.Stage;
import javafx.stage.Window;
import model.Deporte;
import model.Equipos;

import java.net.URL;
import java.sql.SQLException;
import java.util.ResourceBundle;

import dao.EquipoDao;
import javafx.event.ActionEvent;

public class AÃ±adirEquipoController implements Initializable{
	@FXML
	private Button btnAnadir;
	@FXML
	private Button btnCancelar;
	@FXML
	private TextField txtEquipo;
	@FXML
	private TextField txtIniciales;

	@FXML
    private Label lblTitulo;
	private EquipoDao eqD;
	private int idAnt;
	
	// Event Listener on Button[#btnAnadir].onAction

	@FXML
	public void aceptar(ActionEvent event)  {
		// TODO Autogenerated
		
		if(lblTitulo.getText().equals("Modificar Equipo")) {
			System.out.println(idAnt);
			Equipos eq=new Equipos(idAnt,txtEquipo.getText(), txtIniciales.getText());
			if(comprobar().length()==0) {
				try {
					eqD.modificarEquipo(eq);
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					error("Error en el sql");
				}
				info();
				Stage stage = (Stage) btnAnadir.getScene().getWindow();
				stage.close();
			}else {
				error();
			}
		}else {
			if(comprobar().length()==0) {
				
				try {
					int id=eqD.ultimoId()+1;
					Equipos eq=new Equipos(id,txtEquipo.getText(), txtIniciales.getText());
					eqD.anadirEquipo(eq);
					info();
					Stage stage = (Stage) btnAnadir.getScene().getWindow();
					stage.close();
				} catch (SQLException e) {
					this.error(e.getMessage());
				}
				
			}else {
				error();
			}
		}
		
	}
	// Event Listener on Button[#btnCancelar].onAction
	@FXML
	public void cancelar(ActionEvent event) {
		// TODO Autogenerated
		Stage stage = (Stage) btnAnadir.getScene().getWindow();
		stage.close();
	}
    
	public String comprobar() {
		String fallo="";
		if(txtEquipo.getText().length()==0) {
			fallo+="\n El campo del nombre del Equipo tiene que tener contenido";
		}
		if(txtIniciales.getText().length()==0) {
			fallo+="\n El campo Iniciales del Equipo tiene que tener contenido";
		}
		if(txtEquipo.getText().length()>50) {
			fallo+="\n El campo del nombre del Equipo no puede tener mas de 50 caracteres";
		}
		if(txtIniciales.getText().length()>3) {
			fallo+="\n El campo Iniciales del Equipo no puede tener mas de 3 caracteres";
		}
		if(!lblTitulo.getText().equals("Modificar Equipo")) {
			try {
				int id=eqD.ultimoId();
				Equipos equi=new Equipos(id,txtEquipo.getText(),txtIniciales.getText());
				if(eqD.sacarEquipos().contains(equi)) {
					fallo+="\n Ese Equipo ya existe";
				}
			}catch (SQLException e) {
				// TODO: handle exception
				error("Error en el sql");
			}
			
		}
		return fallo;
	}
	public void error () {
		Alert alert;
		String texto=comprobar();
		alert = new Alert(Alert.AlertType.ERROR);
		alert.setContentText(texto);
		alert.setHeaderText(null);
		alert.setTitle("ERROR");
		alert.showAndWait();
	}
	public void error (String text) {
		Alert alert;
		String texto=text;
		alert = new Alert(Alert.AlertType.ERROR);
		alert.setContentText(texto);
		alert.setHeaderText(null);
		alert.setTitle("ERROR");
		alert.showAndWait();
	}
	public void info() {
		Alert alert;
		alert = new Alert(Alert.AlertType.INFORMATION);
		alert.setContentText("ACCION HECHA CORRECTAMENTE");
		alert.setHeaderText(null);
		alert.setTitle("INFO");
		alert.showAndWait();
	}
	public void rellenar(Equipos e) {
		lblTitulo.setText("Modificar Equipo");
		txtEquipo.setText(e.getNombre());
		txtIniciales.setText(e.getIniciales());
		
		txtEquipo.setDisable(true);
		idAnt=e.getId_equipo();
	}
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		eqD=new EquipoDao();
	}
}
